{{- if .Values.apollo.dbInit.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-apollo-db-init
  labels:
    app: apollo-db-init
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-apollo-db-init
      labels:
        app: apollo-db-init
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.apollo.dbInit.podSecurityContext | nindent 8 }}
      restartPolicy: {{ .Values.dbInit.job.restartPolicy | default "OnFailure" }}
      containers:
        - name: apollo-db-init
          image: "{{ .Values.global.registry.name }}/{{ .Values.apollo.dbInit.image.repository }}:{{ .Values.apollo.dbInit.image.tag }}"
          imagePullPolicy: {{ .Values.apollo.dbInit.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.apollo.dbInit.containerSecurityContext | nindent 12 }}
          readinessProbe:
            exec:
              command:
                - ls
                - /
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - ls
                - /
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            # Apollo database URL
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: external-postgres-secret
                  key: url
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-encryption-key
                  key: ENCRYPTION_KEY
            - name: ORG_API_KEY_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-encryption-key
                  key: ENCRYPTION_KEY
            - name: COMPOSIO_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-composio-api-key
                  key: COMPOSIO_API_KEY
            - name: ADMIN_EMAIL
              value: {{ .Values.dbInit.adminEmail | default "hello@composio.dev" | quote }}
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1Gi
  backoffLimit: {{ .Values.dbInit.job.backoffLimit | default 3 }}
  activeDeadlineSeconds: {{ .Values.dbInit.job.activeDeadlineSeconds | default 300 }}
{{- end }}
