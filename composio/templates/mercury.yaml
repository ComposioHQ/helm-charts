{{- if and .Values.mercury.enabled (not .Values.mercury.useKnative) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "composio.fullname" . }}-mercury
  namespace: {{ include "composio.namespace" . }}
  labels:
    {{- include "composio.labels" . | nindent 4 }}
    app.kubernetes.io/component: mercury
spec:
  replicas: {{ .Values.mercury.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "composio.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mercury
  template:
    metadata:
      labels:
        {{- include "composio.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mercury
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- with .Values.mercury.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mercury.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mercury.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: mercury
          image: "{{ .Values.global.registry.name }}/{{ .Values.mercury.image.repository }}:{{ .Values.mercury.image.tag }}"
          imagePullPolicy: {{ .Values.mercury.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.mercury.service.port | default 8080 }}
          securityContext:
            {{- toYaml .Values.mercury.securityContext | nindent 12 }} 
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.mercury.service.port | default 8080 }} 
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.mercury.service.port | default 8080 }}
            timeoutSeconds: 1

          env:
            # AWS S3 Configuration (using Minio)
            - name: AWS_S3_REGION_NAME
              value: "us-east-1"
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            - name: AWS_REGION
              value: "us-east-1"
            - name: AWS_S3_LAMBDA_BUCKET
              value: "tools"
            - name: AWS_S3_CUSTOM_TOOLS_BUCKET
              value: "tools"
            - name: SELF_HOSTED
              value: "true"
            - name: BACKEND_URL
              value: {{ printf "http://%s-apollo:9900" .Release.Name | quote }}
            # Minio credentials
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MINIO_ROOT_USER
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MINIO_ROOT_PASSWORD
            - name: AWS_LAMBDA_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MINIO_ROOT_USER
            - name: AWS_LAMBDA_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MINIO_ROOT_PASSWORD
            - name: AWS_S3_ENDPOINT
              value: "http://{{ .Release.Name }}-minio:9000"
            - name: AWS_S3_ENDPOINT_URL
              value: "http://{{ .Release.Name }}-minio:9000"
            - name: AWS_S3_FORCE_PATH_STYLE
              value: "true"
            # OpenAI API Key
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: OPENAI_API_KEY
            # OpenTelemetry configuration
            {{- if .Values.otel.enabled }}
            - name: OTEL_ENABLED
              value: {{ .Values.otel.enabled | quote }}
            - name: OTEL_SERVICE_NAME
              value: {{ .Values.otel.mercury.serviceName | default "mercury-openapi" | quote }}
            - name: OTEL_SERVICE_VERSION
              value: {{ .Values.otel.mercury.serviceVersion | default "1.0.0" | quote }}
            - name: OTEL_ENVIRONMENT
              value: {{ .Values.otel.environment | default .Values.global.environment | default "development" | quote }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ .Values.otel.exporter.otlp.endpoint | default (printf "http://%s-otel-collector:4317" .Release.Name) | quote }}
            - name: OTEL_EXPORTER_OTLP_INSECURE
              value: {{ .Values.otel.exporter.otlp.insecure | default "true" | quote }}
            - name: OTEL_TRACES_ENABLED
              value: {{ .Values.otel.traces.enabled | default "true" | quote }}
            - name: OTEL_METRICS_ENABLED
              value: {{ .Values.otel.metrics.enabled | default "true" | quote }}
            - name: OTEL_METRIC_EXPORT_INTERVAL
              value: {{ .Values.otel.metrics.exportInterval | default "60000" | quote }}
            # OTEL Resource attributes
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name={{ .Values.otel.mercury.serviceName | default "mercury-openapi" }},service.version={{ .Values.otel.mercury.serviceVersion | default "1.0.0" }},deployment.environment={{ .Values.otel.environment | default .Values.global.environment | default "development" }}"
            {{- end }}
          resources:
            {{- toYaml .Values.mercury.resources | nindent 12 }}
          {{- with .Values.mercury.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.mercury.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "composio.fullname" . }}-mercury
  namespace: {{ include "composio.namespace" . }}
  labels:
    {{- include "composio.labels" . | nindent 4 }}
    app.kubernetes.io/component: mercury
spec:
  type: {{ .Values.mercury.service.type | default "ClusterIP" }}
  ports:
    - port: {{ .Values.mercury.service.port | default 8080 }}
      targetPort: {{ .Values.mercury.service.port | default 8080 }}
      protocol: TCP
  selector:
    {{- include "composio.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: mercury
{{- end }} 
