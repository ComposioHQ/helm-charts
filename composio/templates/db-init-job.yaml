apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-db-init
  labels:
    app: db-init
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-9"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded

spec:
  backoffLimit: 3
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels:
        app: db-init
        release: {{ .Release.Name }}
    spec:
      restartPolicy: Never
      securityContext:
        #runAsNonRoot: true
        #runAsUser: 1000
        fsGroup: 2000
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: db-init
          image: "{{ .Values.dbInit.image.repository }}:{{ .Values.dbInit.image.tag }}"
          imagePullPolicy: {{ .Values.dbInit.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault

          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: external-postgres-secret
                  key: url
            - name: COMPOSIO_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-composio-api-key
                  key: COMPOSIO_API_KEY
            - name: ADMIN_EMAIL
              value: {{ .Values.dbInit.adminEmail | default "hello@composio.dev" | quote }}
          resources:
            requests:
              cpu: 1000m
              memory: 1024Mi
            limits:
              cpu: 1000m
              memory: 1024Mi 
